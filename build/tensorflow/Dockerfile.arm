# BUILD redisfab/tensorflow-${ARCH}:$(TF_VER)

# stretch|bionic|buster
ARG OSNICK=buster

# arm32v7|arm64v8
ARG ARCH=arm64v8

#----------------------------------------------------------------------------------------------
FROM redisfab/${ARCH}-jdk-xbuild:${OSNICK}

RUN [ "cross-build-start" ]

ARG ARCH1=arm64v8

ARG TF_BRANCH=r1.14
ARG TF_VER=1.14.0

ENV DEBIAN_FRONTEND=noninteractive
ENV X_NPROC "cat /proc/cpuinfo|grep processor|wc -l"
ENV TF_IGNORE_MAX_BAZEL_VERSION=1

WORKDIR /build

RUN set -e; \
	apt-get -qq update; \
	apt-get -q install -y git build-essential python3 python3-dev python3-pip wget

RUN set -e ;\
	wget -q -O /usr/local/bin/bazel https://s3.amazonaws.com/redismodules/bazel/bazel-0.24.1.${ARCH1} ;\
	chmod +x /usr/local/bin/bazel

RUN pip3 install six numpy wheel setuptools mock
RUN pip3 install keras_applications==1.0.6 --no-deps
RUN pip3 install keras_preprocessing==1.0.5 --no-deps

# RUN set -e ;\
# 	mkdir -p /usr/share/man/man1 ;\
# 	apt-get -q install -y openjdk-11-jdk

RUN set -e; \
	git clone --single-branch --branch ${TF_BRANCH} --recursive https://github.com/tensorflow/tensorflow.git ;\
	cd tensorflow ;\
	git checkout v${TF_VER}

RUN set -e ;\
	cd tensorflow ;\
	patch -p1 -i ../tf-1.14.0-arm64v8.patch

RUN set -e; \
	cd tensorflow ;\
	./configure ;\
	bazel build --jobs $(eval "$X_NPROC") --config=opt //tensorflow:libtensorflow.so

ADD ./deps/readies/ /build/deps/readies/
ADD ./build/tensorflow/collect.py /build/

RUN  ./collect.py

RUN [ "cross-build-end" ]
