version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "get_deps.sh" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install -y git-lfs
            git lfs install
            bash get_deps.sh cpu

      - save_cache:
          paths:
            - deps
          key: v1-dependencies-{{ checksum "get_deps.sh" }}

      - run:
          name: Build
          command: make install

      - run:
          name: Test
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip uninstall -y RLTest
            pip install https://github.com/lantiga/RLTest/archive/python3_fixes.zip
            pip install numpy
            pip install scikit-image
            git lfs pull
            python3 -m RLTest --test test/basic_tests.py --module src/redisai.so --enterprise-lib-path /home/circleci/project/deps/libtensorflow/lib --oss-redis-path deps/redis/src/redis-server -s
          environment:
            LD_LIBRARY_PATH: /home/circleci/project/deps/libtensorflow/lib            
      - run:
          name: Persist Artifacts
          command: >-
            mkdir -p /workspace/build && cp src/$MODULE_ARTIFACT /workspace/ &&
            cp ramp.yml /workspace/            
      - persist_to_workspace:
          root: /workspace
          paths:
            - '*.so'
            - '*.yml'
            - build
  package_branch:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Package
          command: >-
            ramp pack -m /workspace/ramp.yml -o
            /workspace/build/$PACKAGE_NAME.{os}-{architecture}.$CIRCLE_BRANCH.zip
            /workspace/$MODULE_ARTIFACT
      - persist_to_workspace:
          root: /workspace
          paths:
            - build
      - store_artifacts:
          path: /workspace/build
  package_release:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Package
          command: >-
            ramp pack -m /workspace/ramp.yml -o
            /workspace/build/$PACKAGE_NAME.{os}-{architecture}.{semantic_version}.zip
            /workspace/$MODULE_ARTIFACT
      - run:
          name: Package
          command: >-
            ramp pack -m /workspace/ramp.yml -o
            /workspace/build/$PACKAGE_NAME.{os}-{architecture}.latest.zip
            /workspace/$MODULE_ARTIFACT
      - persist_to_workspace:
          root: /workspace
          paths:
            - build
      - store_artifacts:
          path: /workspace/build
  deploy_branch:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy to S3
          command: >-
            aws s3 cp /workspace/build/ s3://redismodules/$PACKAGE_NAME/ --acl
            public-read --recursive --exclude "*" --include "*.zip"
  deploy_release:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy to S3
          command: >-
            aws s3 cp /workspace/build/ s3://redismodules/$PACKAGE_NAME/ --acl
            public-read --recursive --exclude "*" --include "*.zip"
  deploy_docs:
    docker:
      - image: 'redislabsmodules/rmbuilder:latest'
    steps:
      - checkout
      - run:
          name: Build Docs
          command: mkdocs build
      - run:
          name: Deploy Docs to S3
          command: >-
            aws s3 cp site s3://oss.redislabs.com/$WEBSITE_FOLDER/ --acl
            public-read --recursive
workflows:
  version: 2
  build_and_package:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - package_branch:
          requires:
            - build
          filters:
            branches:
              only: master
      - package_release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/^v[0-9].*/'
      - deploy_branch:
          requires:
            - package_branch
      - deploy_release:
          filters:
            tags:
              only: '/^v[0-9].*/'
          requires:
            - package_release
      - deploy_docs:
          filters:
            branches:
              only: master
